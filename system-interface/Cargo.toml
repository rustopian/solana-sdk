[package]
name = "solana-system-interface"
version = "2.0.0"
description = "Instructions and constructors for the System program"
readme = "README.md"
authors = { workspace = true }
repository = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
edition = { workspace = true }
rust-version = "1.81.0"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]
all-features = true
rustdoc-args = ["--cfg=docsrs"]

[lib]
crate-type = ["rlib"]

[features]
bincode = ["dep:solana-instruction", "serde"]
frozen-abi = [
    "dep:solana-frozen-abi",
    "dep:solana-frozen-abi-macro",
    "dep:solana-logger",
    "serde",
    "solana-pubkey/frozen-abi",
    "solana-pubkey/std",
]
serde = ["dep:serde", "dep:serde_derive", "solana-pubkey/serde"]

[dependencies]
num-traits = { workspace = true }
serde = { workspace = true, optional = true }
serde_derive = { workspace = true, optional = true }
solana-frozen-abi = { workspace = true, features = ["frozen-abi"], optional = true }
solana-frozen-abi-macro = { workspace = true, features = ["frozen-abi"], optional = true }
solana-instruction = { workspace = true, features = ["bincode", "std"], optional = true }
solana-logger = { workspace = true, optional = true }
solana-msg = { workspace = true }
solana-program-error = { workspace = true }
solana-pubkey = { workspace = true, default-features = false }

[dev-dependencies]
anyhow = { workspace = true }
borsh = { workspace = true, features = ["derive", "unstable__schema"] }
solana-account-info = { workspace = true }
solana-cpi = { path = "../cpi" }
solana-example-mocks = { path = "../example-mocks" }
solana-nonce = { workspace = true }
solana-program-entrypoint = { workspace = true }
solana-program-error = { workspace = true, features = ["borsh"] }
solana-pubkey = { workspace = true, features = ["std"] }
solana-system-interface = { path = ".", features = ["bincode"] }
solana-sysvar = { workspace = true }
solana-sysvar-id = { workspace = true }
static_assertions = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
